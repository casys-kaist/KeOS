(function() {
    var type_impls = Object.fromEntries([["keos",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-InterruptGuard\" class=\"impl\"><a href=\"#impl-Default-for-InterruptGuard\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Default for InterruptGuard</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default</a>() -&gt; InterruptGuard</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a>Read more</a></div></details></div></details>","Default","keos::thread::ThreadPinGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-InterruptGuard\" class=\"impl\"><a href=\"#impl-Drop-for-InterruptGuard\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Drop for InterruptGuard</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a>Read more</a></div></details></div></details>","Drop","keos::thread::ThreadPinGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InterruptGuard\" class=\"impl\"><a href=\"#impl-InterruptGuard\" class=\"anchor\">§</a><h3 class=\"code-header\">impl InterruptGuard</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>() -&gt; InterruptGuard</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>InterruptGuard</code>, disabling interrupts.</p>\n<h5 id=\"behavior\"><a class=\"doc-anchor\" href=\"#behavior\">§</a>Behavior</h5>\n<ul>\n<li>Saves the current interrupt state.</li>\n<li>Disables interrupts (<code>cli</code> instruction).</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A new instance of <code>InterruptGuard</code>, which will restore the original\ninterrupt state when dropped.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>_guard = InterruptGuard::new(); <span class=\"comment\">// Disables interrupts\n// Critical section...\n// Interrupts are restored when `_guard` goes out of scope.</span></code></pre></div>\n</div></details></div></details>",0,"keos::thread::ThreadPinGuard"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2843]}